openapi: 3.0.1
info:
  version: '1.0'
  title: User service
servers:
  - url: '/api/v1/user-service'
tags:
  - name: User Management
    description: Operations with User entities
paths:
  /user/{id}:
    get:
      tags:
        - User Management
      summary: Get User
      description: Get User by id
      operationId: getUserById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '404':
          description: User not found
    put:
      tags:
        - User Management
      summary: Add User
      description: Update User
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
    delete:
      tags:
        - User Management
      summary: Delete User
      description: Delete User
      operationId: delete
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Ok. User succesfully deleted

  /user:
    post:
      tags:
        - User Management
      summary: Add Users
      description: Add User
      operationId: addUser
      requestBody:
        $ref: '#/components/requestBodies/UserRequest'
      responses:
        '200':
          description: Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
    get:
      tags:
        - User Management
      summary: Get Users
      description: Get all Users
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'

components:
  requestBodies:
    UserRequest:
      description: User request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDTO'
  parameters:
    id:
      name: id
      in: path
      description: User ID
      required: true
      schema:
        type: integer
        format: int32
      example: 59949
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          description: Unique Identifier of User
          type: integer
          format: int32
          readOnly: true
        name:
          description: Name of User.
          type: string
          readOnly: true
          maxLength: 100
        contact:
          description: Contact of User.
          type: string
          maxLength: 100
        orders:
          description: List of orders of User.
          type: array
          items:
            type: integer
            format: int32